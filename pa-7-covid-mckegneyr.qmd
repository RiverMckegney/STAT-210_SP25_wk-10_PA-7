---
title: "PA 7: COVID-19 Infections and Impact on States"
author: "River Mckegney"
format: 
  html: default
  gfm: default
embed-resources: true
code-tools: true
toc: true
editor: source
execute: 
  echo: true
  message: false
  warning: false
---

```{r}
#| label: setup
#| include: false
library(tidyverse)
library(scales) #can make nicer axis labels for graphs
```

***This task is complex. It requires many different types of abilities. Everyone will be good at some of these abilities but nobody will be good at all of them. In order to produce the best product possible, you will need to use the skills of each member of your group.***

<!-- The person who has the most relaxing Spring Break plans starts as the Developer (typing and listening to instructions from the Coder)!  -->


## Goals for the Activity  

- Use the `dplyr` verbs to transform your data  
- Create new data sets through the joining of data from various sources 
- Use `forcats` to reorder values on a graph for easier comparison  


**THROUGHOUT THE Activity** be sure to follow the Style Guide by doing the following:  

- load the appropriate packages at the beginning of the Quarto document  
- use proper spacing  
- *add labels* to all code chunks  
- comment at least once in each code chunk to describe why you made your coding decisions  
- add appropriate labels to all graphic axes  



## Setup - United States COVID-19 Cases and Deaths

Starting in January 2020, the New York Times started reporting on COVID-19 infections in the United States and eventually created a [Githhub Repository](https://github.com/nytimes/covid-19-data/) of the data they used and reported on in their stories (a field called "Data Journalism"). They ended their data collection in March 2023 and switched to just using data from national reporting systems. 

We will use their data to evaluate COVID-19 and how it varied across different states. You can look on the course website instructions for more details on how we prepared the data.  
 

## Part 1: Greatest Number of Cases

First, we need to read in our clean data. 

Note - there may be an error in the code below.

```{r}
#| label: read-clean-covid-cases
#| echo: true
#| output: true

cases <- read_csv("data/covid_cases_us.csv")
```


### Which 10 US States/Territories had the most COVID-19 Cases from January 2020-March 2023

We want to identify the states with the most cases (top 10). To do this, we will need to modify our data to find the total number of cases for each state. The code below does this but ***it has errors!*** 

Correct the errors and then assign the resulting data to `state_totals`.  

```{r}
#| label: calculate-totals
#| echo: true
#| output: true
#| eval: true

# Original Code Script:

# cases |> 
#   groupby(state) |> 
#   sum(total = sum(case_daily)) |> 
#   ungroup() # this is useful to do after a group_by calculation is complete so you do not continue grouping by those variables 


# River's modified code:

cases |> 
  group_by(state) |> 
  summarise(total = sum(cases_daily)) |> # Create new col of total cases per state
  ungroup() |> # Do to continue conducting other mods not related to set grouping
  arrange(desc(total)) |> # Arrange values in greatest to least order
  head(total, n = 10) # Slice and keep just the top 10 rows 

# River's finished df:

state_totals <- cases |> 
  group_by(state) |> 
  summarise(total = sum(cases_daily)) |> # Create new col of total cases per state
  ungroup() |> # Do to continue conducting other mods not related to set grouping
  arrange(desc(total)) # Arrange values in greatest to least order

```


Now use the `states_totals` and identify the top ten states/territories with the most cases between January 2020 and March 2023. Then make a graph ordered by greatest number of cases to least number of cases (Hint: use `forcats` functions to help you).

```{r}
#| label: top-10-states-cases
#| echo: true
#| output: true
#| eval: true

# Provided code content

# state_totals |> 
#   ## order the data by total cases
#   ## extract just the top ten (Hint - look at the `slice() functions)
#   ## create a bar chart with x as the totals and y as the state names
#   ## order the states by greatest to smallest total on the graph
#   ## label, color, update as necessary to provide all relevant information
  
# River's top-10-states-cases barplot
state_totals |> 
  arrange(desc(total)) %>% # Order data high to low
  slice_head(n = 10) %>% # Select top 10 states
  # Create plot, set axes, and arrange in order from high (bottom) to low (top)
  ggplot(aes(fill = state, x = total, y = fct_reorder(state, total, .fun = desc))) +                                                                   # <2>
  geom_col() + # Make column bar plot
  labs(title = "COVID-19 Top Ten Infection Cases For U.S. States",
      x = "Total Daily Cases", y = "State") + # Add labels
  # Make initial bars flush to x-axis baseline
  scale_y_discrete(expand = expansion(mult = c(0, 0))) +                    # <1>
  # Make inital bars flush to y-axis starting line
  scale_x_continuous(expand = expansion(mult = c(0, 0.3))) +                # <1>
  theme_classic()
#  xlim(c(0, 12500000)) # Set minor ticks to more appropriate range 

# River's simpler top-10-state-cases barplot
state_totals |> 
  arrange(desc(total)) %>% # Order data high to low
  slice_head(n = 10) %>% # Select top 10 states
  # Create plot, set axes, and arrange in order from high (bottom) to low (top)
  ggplot(aes(fill = state, x = total, y = fct_reorder(state, total, .fun = desc))) +      # <2>
  geom_col() + # Make column bar plot
  labs(title = "COVID-19 Top Ten Infection Cases For U.S. States",
      x = "Total Daily Cases", y = "State")
```
1. Source referenced to reduce space between axis & bars: <https://ggplot2.tidyverse.org/articles/faq-bars.html>
2. Source used to figure out how to reorder bars with fct_reorder, but sorting so high values appear on bottom of graph, done with .fun = desc: <https://stackoverflow.com/questions/68011782/fct-reorder-ggplot2-not-ordering-as-desired>.

### Canvas Quiz Question 1

**Which state had the most COVID-19 cases between January 2020 and March 2023?**

> California appears to display the greatest counts for cases recorded/observed within the dataset compared to the other top ten U.S. states. 


### Other Question
**Is this the best way to look at our data? Is looking at just the total number of cases the best way to compare states?**

> No, comparing state's COVID-19 cases by counts alone is not an accurate comparison, because states have varying population sizes, so infectious rates would be best represented as a proportion of total counts per state divided by total population size within each state.



## Part 2: Updating our Data Source

Hopefully you realized that there is a flaw in our comparison. Many of the states with the most cases are also some of the biggest states in terms of population size! So is there a better way to make comparisons between groups with differing group sizes at baseline? YES! Here are a few options:  

- Calculate the Proportion  
- Calculate the Percentage  
- Calculate a Rate, such as Rate per 100,000 people  


To do any of the above calculations, we would need the population sizes for each state. Here is data from the US Census Bureau on the state estimated population size in 2019. 

Note - there may be an error in the code below.

```{r}
#| label: us-state-population-data
#| echo: true
#| output: true
#| eval: true

us_pop <- read_csv("data/USpop2019.csv")
```

### Which 10 US States/Territories had the most COVID-19 Cases Relative to Population Size from January 2020-March 2023

Choose one of the above statistics to calculate to make our comparison between states/territories.  Then recreate your graph from above 

```{r}
#| label: next chunk
#| echo: true
#| output: true
#| eval: false

# Provided code content

#state_totals |> 
  ## add in column with state population sizes  
  ## calculate your chosen relative rate (e.g. proportion, percentage, rate)
  ## order the data by your relative rate
  ## extract just the top ten (Hint - look at the `slice() functions)
  ## create a bar chart with x as the relative rate and y as the state names
  ## order the states by greatest to smallest relative rate on the graph
  ## label, color, update as necessary to provide all relevant information
```

```{r}
#| label: U.S-COVID-19-infection-rate-per-state
#| echo: true
#| output: true
#| eval: true

us_pop |> 
  mutate(state = NAME) |> # Rename or add col "state" to us_pop dataset for                                  joinable column by
  right_join(y = state_totals, by = "state") |> # Join datasets
  na.omit() |>
  group_by(state) |> # Group upcoming calc. by state column
  mutate(state_cases_prop = total/estimate) |> # Calc proportion or infectious                                                    rate of state by population
  ungroup() |> # Exit grouping operation
  arrange(state_cases_prop) |> # reorder low to high
  slice_tail(n = 10) |> # Extract top 10
  ggplot(aes(x = state_cases_prop, state, y = fct_reorder(state, state_cases_prop, .fun = desc), fill = state)) + # Create graph, set axes, order structure, and color code by state
  geom_col() + # Make bar chart 
  labs(title = "COVID-19 Infectious Rates In U.S States", x = "Infectious Rate (State COVID-19 cases Per Population Size)", y = "State")
  


```




### Canvas Quiz Question 2

**Which state had highest number of COVID-19 cases relative to population size between January 2020 and March 2023?**

>Insert Answer Here


### Other Questions
**What are some possible issues with our analysis? Consider the following:**  

- Data sources and reliability of the data  
- Time scale and impact of time    
- 

>Insert Answer Here


**What other questions would you like to try to answer using this data? Would that require other data sources? What information would you need to answer your questions?**

>Insert Answer Here  



Coding References:
1. Ggplot2: Tidyverse. Developed by Hadley Wickham, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, Dewey Dunnington, Teun van den Brand, and Posit. "FAQ: Barplots". Website url: <https://ggplot2.tidyverse.org/articles/faq-bars.html>. Code source url: <https://github.com/tidyverse/ggplot2/blob/v3.5.2/vignettes/articles/faq-bars.Rmd>.
2. Stackoverflow. "fct_reorder/ggplot2 not ordering as desired". Last modified 2021-06-17. <https://stackoverflow.com/questions/68011782/fct-reorder-ggplot2-not-ordering-as-desired>.
